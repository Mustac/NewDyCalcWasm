@using System.Reflection;
@inject MealService NewItemService
@inject StorageService StorageService

@if (Show)
{
    <div class="shadow-overlay"></div>
    <div class="absolute-center popup ">
        <div class="row justify-content-center">
            <EditForm Model="mealInfo" OnValidSubmit="CreateNewMeal">
                <div class="col-12 border border-dark p-4 rounded shadow bg-white">
                    <h1 class="fw-bold">Register new meal :</h1>
                    <hr />
                    <DataAnnotationsValidator />
                    <div class="row border rounded p-3 shadow">
                        <h6 class="fw-bolder">DY Box meal:</h6>
                        <div class="col-2">
                            <label for="box-name">Id</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.BoxId" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Position</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.BoxPosition" />
                        </div>
                        <div class="col-3">
                            <label for="box-name">Name</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.BoxName" />
                        </div>
                        <div class="col-1">
                            <label for="box-name">Color</label>
                            <ColorPicker OnColorChanged="OnColorChanged" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Carton box</label>
                            <InputNumber id="box-name" placeholder="Amount" class="form-control" @bind-Value="mealInfo.BoxPiecesPerCartonBox" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Plastic box</label>
                            <InputNumber id="box-name" placeholder="Amount" class="form-control" @bind-Value="mealInfo.BoxPiecesPerPlasticCase" />
                        </div>
                    </div>


                    <div class="mt-3 row border rounded p-3 shadow">
                        <h6 class="fw-bolder">DY Hotmeal:</h6>
                        <div class="col-2">
                            <label for="box-name">Id</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.HotMealId" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Position</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.HotMealPosition" />
                        </div>
                        <div class="col-4">
                            <label for="box-name">Name</label>
                            <InputText id="box-name" class="form-control" @bind-Value="mealInfo.HotMealName" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Carton box</label>
                            <InputNumber id="box-name" placeholder="Amount" class="form-control" @bind-Value="mealInfo.HotMealPiecesPerCartonBox" />
                        </div>
                        <div class="col-2">
                            <label for="box-name">Plastic box</label>
                            <InputNumber id="box-name" placeholder="Amount" class="form-control" @bind-Value="mealInfo.HotMealPiecesPerPlasticCase" />
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-6">
                            <button type="button" @onclick="HidePopup" class="form-control btn btn-dark">Cancel</button>
                        </div>
                        <div class="col-6">
                            <button class="form-control btn btn-success">Create</button>
                        </div>
                    </div>
                </div>


            </EditForm>
        </div>
    </div>
}

<style>
    .absolute-center {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    .popup {
        z-index: 10 !important;
        width: 1000px;
    }

    .shadow-overlay {
        position: absolute;
        z-index: 10 !important;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
    }
</style>

@code {

    MealInfo mealInfo = new MealInfo() { BoxColor = "#000000" };

    [Parameter]
    public bool Show { get; set; }


    protected override void OnInitialized()
    {
        NewItemService.PopupAddItem = this;
    }


    async Task CreateNewMeal()
    {
        

        await StorageService.SaveItem(mealInfo);
        mealInfo = new MealInfo() { BoxColor = "#000000" };
        HidePopup();
    }

    private void OnColorChanged(string newColor)
    {
        mealInfo.BoxColor = newColor;
    }

    public void ShowPopup()
    {
        Show = true;
        StateHasChanged();
    }

    public void HidePopup()
    {
        Show = false;

    }

}